version: '3'

services:
  reverse-proxy:
    image: traefik:v2.6
    command: --handlers.insecure=true --providers.docker
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
# todo entrypoint postgres

  postgres:
    image: postgres:10.5
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.postgres.rule=HostSNI(`*`)"
      - "traefik.tcp.services.postgres.loadbalancer.server.port=5432"
      - "traefik.tcp.routers.postgres.entrypoints=pg"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - '5432:5432'
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
#      - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql

#  whoami-a:
#    # A container that exposes an API to show its IP address
#    image: traefik/whoami
#    labels:
#      - traefik.http.routers.whoami-a.rule=Host(`localhost`)
#      - traefik.http.routers.whoami-a.rule=PathPrefix(`/whoami/a/`)
#      - traefik.http.routers.whoami-a.entrypoints=http
#
#  whoami-b:
#    # A container that exposes an API to show its IP address
#    image: traefik/whoami
#    labels:
#      - traefik.http.routers.whoami-b.rule=Host(`localhost`)
#      - traefik.http.routers.whoami-b.rule=PathPrefix(`/whoami/b/`)
#      - traefik.http.routers.whoami-b.entrypoints=http